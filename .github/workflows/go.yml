name: Go

on:
  push:
  pull_request:
    branches: [ ft/*, main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Install dependencies
      run: |
        export GOPATH=$HOME/go
        export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
        curl -sfL https://raw.githubusercontent.com/securego/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin
        curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin
        go install github.com/cucumber/godog/cmd/godog@v0.12.0
        go mod vendor
    
    - name: Security Scan
      run: gosec -exclude-dir=vendor ./...
    
    - name: Build downstream system
      run: |
        docker-compose -f docker-compose-github.yml up -d
 
    - name: Unit Tests
      run: |
        export API_HOST="http://localhost:8080"
        go test ./form3/... -coverprofile=coverage.out

    - name: Bdd Cucumber tests
      run: |
        export API_HOST=http://localhost:8080
        cd integration && godog

    # Test issue of godog if we did lint firstly
    - name: Go lint
      run: golangci-lint run

    - name: Pact - Contract test
      run: |
        export GOPATH=$HOME/go
        export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
        cwd=$(pwd)
        cd $GOPATH
        curl -fsSL https://raw.githubusercontent.com/pact-foundation/pact-ruby-standalone/master/install.sh | bash
        export PATH=$PATH:$GOPATH/pact/bin
        go install github.com/pact-foundation/pact-go@v1
        cd $cwd
        go test -v ./contract-testing/pact_test.go